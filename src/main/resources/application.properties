spring.datasource.url= jdbc:postgresql://ec2-54-225-228-142.compute-1.amazonaws.com:5432/db34lpcd15lk1o
spring.datasource.username=ucnfsfrhkrfxjy
spring.datasource.password=bad0eac65e17cf16af3672ee44611b5a14104d66a25aa0f3c98c80513276657b

jwt.secret=cps-app-secrete
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
##Loggin in spring boot
logging.file.name=application.log

#Disabling the spring boot banner
logging.main.banner-mode=off

#changing the color of the output in console
spring.output.ansi.enabled=ALWAYS

#Enabling Debug logs
debug=false
#Enabling Trace logs
trace=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
## MULTIPART (MultipartProperties)
# Enable multipart uploads
multipart.enabled=true
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
# All files uploaded through the REST API will be stored in this directory

upload.beneficiary-profile=src/main/resources/static/profile-pictures
upload.document=src/cloudStore

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true
spring.jackson.serialization.fail-on-empty-beans=false
#server.port=8500
